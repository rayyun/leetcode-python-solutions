# https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/

# Solution 1
# O(n) / O(1)
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        if len(prices) < 2:
            return 0
        
        max_profit = 0
        
        for i in range(1, len(prices)):
            max_profit = max(max_profit, max_profit + (prices[i] - prices[i-1]))
            
        return max_profit 
        

# Solution 2
# O(n) / O(1)
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        max_profit = 0
        
        for i in range(len(prices) - 1):
            if prices[i] < prices[i+1]:
                max_profit += prices[i+1] - prices[i]
                
        return max_profit
