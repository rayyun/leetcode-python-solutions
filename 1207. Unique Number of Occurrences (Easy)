# https://leetcode.com/problems/unique-number-of-occurrences/

# Solution 1 - Hash map & Hash set
# O(n) / O(n)
from collections import Counter

class Solution:
    def uniqueOccurrences(self, arr: List[int]) -> bool:
        count = Counter(arr)
        values = set(count.values())

        return len(count) == len(values)
    


# Solution 2 - Sort
# O(n log n) / O(n)
from collections import Counter

class Solution:
    def uniqueOccurrences(self, arr: List[int]) -> bool:
        count = Counter(arr)
        sorted_count = sorted(count.values())

        for i in range(1, len(sorted_count)):
            if sorted_count[i] == sorted_count[i-1]:
                return False
        
        return True
