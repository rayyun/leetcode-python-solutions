# https://leetcode.com/problems/pacific-atlantic-water-flow/

# Solution 1 - DFS
# O(R*C) / O(R*C)
class Solution:
    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:
        if not heights: 
            return
        
        def dfs(row, col, ocean):
            ocean.add((row, col))
            
            direction = ((-1, 0), (1, 0), (0, -1), (0, 1))
            
            for x, y in direction:
                newRow = row + x
                newCol = col + y
                
                if 0 <= newRow < R and 0 <= newCol < C and (newRow, newCol) not in ocean:
                    if heights[newRow][newCol] >= heights[row][col]:
                        dfs(newRow, newCol, ocean)
        
        R, C = len(heights), len(heights[0])
        pacific = set()
        atlantic = set()
        
        for c in range(C):
            dfs(0, c, pacific)
            dfs(R-1, c, atlantic)
            
        for r in range(R):
            dfs(r, 0, pacific)
            dfs(r, C-1, atlantic)
            
        res = []
        
        for r in range(R):
            for c in range(C):
                if (r, c) in pacific and (r, c) in atlantic:
                    res.append([r, c])
                    
        return res
