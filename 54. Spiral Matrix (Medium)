# https://leetcode.com/problems/spiral-matrix/

# O(m*n) / O(m*n)
class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        r_start, c_start = 0, 0
        r_end, c_end = len(matrix) - 1, len(matrix[0]) - 1
        res = []

        while r_start <= r_end and c_start <= c_end:
            for c in range(c_start, c_end + 1):
                res.append(matrix[r_start][c])
            r_start += 1

            for r in range(r_start, r_end + 1):
                res.append(matrix[r][c_end])
            c_end -= 1

            if r_start <= r_end:
                for c in range(c_end, c_start - 1, -1):
                    res.append(matrix[r_end][c])                
                r_end -= 1
            
            if c_start <= c_end:
                for r in range(r_end, r_start - 1, -1):
                    res.append(matrix[r][c_start])
                c_start += 1

        return res
