# https://leetcode.com/problems/binary-tree-vertical-order-traversal/

# Solution 1 - BFS
# O(n) / O(n)
from collections import defaultdict, deque

class Solution:
    def verticalOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root:
            return
        
        res = defaultdict(list)
        queue = deque([(root, 0)])
        min_col, max_col = 0, 0
        
        while queue:
            node, col = queue.popleft()
            
            if node:
                res[col].append(node.val)
                min_col = min(min_col, col)
                max_col = max(max_col, col)
                
                queue.append((node.left, col - 1))
                queue.append((node.right, col + 1))
            
        return [res[col] for col in range(min_col, max_col + 1)]
