# https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/

# Solution 1 - string slicing
# O(nm) / O(1)
class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        h_len = len(haystack)
        n_len = len(needle)

        if h_len < n_len:
            return -1

        for i in range(h_len - n_len + 1):
            if haystack[i: i + n_len] == needle:
                return i
        
        return -1
    


# Solution 2 - Sliding Window
# O(nm) / O(1)
class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        h_len = len(haystack)
        n_len = len(needle)

        for window_start in range(h_len - n_len + 1):
            for i in range(n_len):
                if haystack[window_start + i] != needle[i]:
                    break

                if i == n_len - 1:
                    return window_start

        return -1
