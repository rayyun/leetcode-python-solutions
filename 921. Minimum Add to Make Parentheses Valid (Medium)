# https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/

# Solution 1 - Stack
# O(n) / O(n)
class Solution:
    def minAddToMakeValid(self, s: str) -> int:
        stack = []

        for c in s:
            if c == '(':
                stack.append(c)
            else:
                if stack and stack[-1] == '(':
                    stack.pop()
                else:
                    stack.append(c)
        
        return len(stack)
        
    
    
# Solution 2 - without Stack
# O(n) / O(1)
class Solution:
    def minAddToMakeValid(self, s: str) -> int:
        opening, closing = 0, 0

        for c in s:
            if c == '(':
                opening += 1
            else:
                if opening > 0:
                    opening -= 1
                else:
                    closing += 1
        
        return opening + closing
