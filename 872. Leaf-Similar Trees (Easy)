# https://leetcode.com/problems/leaf-similar-trees/

# O(n) / O(n)
class Solution:
    def leafSimilar(self, root1: Optional[TreeNode], root2: Optional[TreeNode]) -> bool:
        def leaves(root):
            if not root:
                return
            
            stack = [root]
            res = []
            
            while stack:
                node = stack.pop()
                
                if not node.left and not node.right:
                    res.append(node.val)
                    
                if node.right:
                    stack.append(node.right)
                    
                if node.left:
                    stack.append(node.left)
                    
            return res
        
        return leaves(root1) == leaves(root2)
