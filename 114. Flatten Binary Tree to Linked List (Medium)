# https://leetcode.com/problems/flatten-binary-tree-to-linked-list/description/

# O(n) / O(1)
class Solution:
    def flatten(self, root: Optional[TreeNode]) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        if not root:
            return []

        dummy = curr = TreeNode()

        stack = [root]

        while stack:
            node = stack.pop()

            if node.right:
                stack.append(node.right)

            if node.left:
                stack.append(node.left)

            node.left = None

            curr.right = node

            curr = curr.right
        
        return dummy.right
