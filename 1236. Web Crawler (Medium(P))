# https://leetcode.com/problems/web-crawler/

# O(m⋅l) / O(m⋅l) - m : number of edges in the graph, l : max length of a URL
class Solution:
    def crawl(self, startUrl: str, htmlParser: 'HtmlParser') -> List[str]:
        def get_hostname(url):
            return url.split('/')[2]

        start_hostname = get_hostname(startUrl)
        res = set()

        def dfs(url, htmlParser):
            res.add(url)

            for next_url in htmlParser.getUrls(url):
                if get_hostname(next_url) == start_hostname and next_url not in res:
                    dfs(next_url, htmlParser)

        dfs(startUrl, htmlParser)

        return res
