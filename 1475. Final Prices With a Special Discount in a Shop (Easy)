# https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop/

# O(n) / O(n)
class Solution:
    def finalPrices(self, prices: List[int]) -> List[int]:
        stack = []
        res = [0 for _ in range(len(prices))]

        for idx, price in enumerate(prices):
            while stack and stack[-1][1] >= price:
                index, org_price = stack.pop()
                res[index] = org_price - price
            
            stack.append((idx, price))
        
        while stack:
            idx, price = stack.pop()
            res[idx] = price
        
        return res
