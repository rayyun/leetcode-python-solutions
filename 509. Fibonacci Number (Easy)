# https://leetcode.com/problems/fibonacci-number/

# Solution #1. 
# O(n) / O(n)
class Solution:
    def fib(self, n: int) -> int:
        fib_seen = {0: 0, 1: 1}
        
        if n < 2:
            return fib_seen[n]
        
        for i in range(2, n+1):
            fib_seen[i] = fib_seen[i - 1] + fib_seen[i - 2]
            
        return fib_seen[n]


# Solution #2 - Recursion
# O(n) / O(n)
class Solution:
    def fib(self, n: int) -> int:
        fib_dic = {0: 0, 1: 1}
        
        def helper(num):
            if num not in fib_dic:
                fib_dic[num] = helper(num-1) + helper(num-2)
                
            return fib_dic[num]
        
        return helper(n)
