# https://leetcode.com/problems/next-permutation/

# O(n) / O(1)
class Solution:
    def nextPermutation(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        left = right = len(nums) - 1
        
        while left > 0 and nums[left-1] >= nums[left]:
            left -= 1
                    
        if left == 0:
            nums.reverse()
            return
        
        pivot = left - 1
        
        while nums[pivot] >= nums[right]:
            right -= 1
        
        nums[pivot], nums[right] = nums[right], nums[pivot]
        
        left, right = pivot + 1, len(nums) - 1
        
        while left < right:
            nums[left], nums[right] = nums[right], nums[left]
            left += 1
            right -= 1
