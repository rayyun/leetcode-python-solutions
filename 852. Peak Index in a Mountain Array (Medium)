# https://leetcode.com/problems/peak-index-in-a-mountain-array/

# Solution 1 - Linear Scan
# O(n) / O(1)
class Solution:
    def peakIndexInMountainArray(self, arr: List[int]) -> int:
        return arr.index(max(arr))
    
    
# O(n) / O(1)
class Solution:
    def peakIndexInMountainArray(self, arr: List[int]) -> int:
        for i in range(len(arr) - 1):
            if arr[i] > arr[i+1]:
                return i
            
            

# Solution 2 - Binary Search
# O(log n) / O(1)
class Solution:
    def peakIndexInMountainArray(self, arr: List[int]) -> int:
        left, right = 0, len(arr) - 1

        while left < right:
            mid = left + (right - left) // 2

            if arr[mid-1] < arr[mid] and arr[mid] > arr[mid+1]:
                return mid

            if arr[mid-1] > arr[mid]:
                right = mid
            else:
                left = mid
