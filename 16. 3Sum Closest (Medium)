# https://leetcode.com/problems/3sum-closest/

# O(n^2) / O(n)
class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        closest_sum = float('inf')

        for i in range(len(nums)):
            lo, hi = i + 1, len(nums) - 1

            while lo < hi:
                sums = nums[i] + nums[lo] + nums[hi]

                if sums == target:
                    return sums
                
                if abs(sums - target) < abs(closest_sum - target):
                    closest_sum = sums
                
                if sums < target:
                    lo += 1
                else:
                    hi -= 1

        return closest_sum
