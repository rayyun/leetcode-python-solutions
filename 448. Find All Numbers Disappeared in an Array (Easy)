# https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/

# Solution #1 : Hash Set
# O(n) / O(n)
class Solution:
    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:
        set_nums = set(nums)
        res = []
        
        for n in range(1, len(nums) + 1):
            if n not in set_nums:
                res.append(n)
                
        return res


# Solution #2 : Inplace
# O(n) / O(1)
class Solution:
    def findDisappearedNumbers(self, nums: List[int]) -> List[int]:
        res = []
        
        for i in range(len(nums)):
            new_idx = abs(nums[i]) - 1
            
            if nums[new_idx] > 0:
                nums[new_idx] *= -1
                
        for i in range(1, len(nums) + 1):
            if nums[i - 1] > 0:
                res.append(i)
                
        return res
