# https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/

# O(n) / O(n)
class Solution:
    def maxProfit(self, prices: List[int], fee: int) -> int:
        N = len(prices)
        with_stock = [0] * N
        no_stock = [0] * N

        with_stock[0] = -prices[0]

        for i in range(1, N):
            with_stock[i] = max(with_stock[i-1], no_stock[i-1] - prices[i])
            no_stock[i] = max(no_stock[i-1], with_stock[i-1] + prices[i] - fee)
        
        return no_stock[-1]
