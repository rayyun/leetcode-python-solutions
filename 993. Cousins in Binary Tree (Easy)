# https://leetcode.com/problems/cousins-in-binary-tree/

# Solution 1 - BFS
# O(n) / O(n)
from collections import deque

class Solution:
    def isCousins(self, root: Optional[TreeNode], x: int, y: int) -> bool:
        if root.val in (x, y):
            return False
        
        queue = deque([(root, None)])
        
        while queue:
            level_size = len(queue)
            found = []
            
            for _ in range(level_size):
                node, parent = queue.popleft()

                if node.left:
                    queue.append((node.left, node))
                    if node.left.val in (x, y):
                        found.append((node.left, node))
                        
                if node.right:
                    queue.append((node.right, node))
                    if node.right.val in (x, y):
                        found.append((node.right, node))
                        
            if len(found) == 1:
                return False
            elif len(found) == 2:
                return found[0][1] != found[1][1]
            
        return False
