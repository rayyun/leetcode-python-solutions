# https://leetcode.com/problems/linked-list-cycle/

# O(n) / O(1)
class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if not head:
            return False
        
        slow, fast = head, head
        
        while fast and fast.next:
            slow, fast = slow.next, fast.next.next
            
            if slow == fast:
                return True
        
        return False
