# https://leetcode.com/problems/permutations-ii/

# # O(∑ k=1~N  P(N,k)) / O(N)  - P(N,k)= N!/(N−k)! = N(N−1)...(N−k+1) 
from collections import Counter

class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        def backtrack(path, counter):
            if len(path) == len(nums):
                res.append(path[:])
                return
            
            for num in counter:
                if counter[num] > 0:
                    path.append(num)
                    counter[num] -= 1

                    backtrack(path, counter)

                    path.pop()
                    counter[num] += 1
                
        res = []    
        backtrack([], Counter(nums))
        
        return res
