# https://leetcode.com/problems/maximum-product-of-three-numbers/

# Solution 1 - Sorting
# O(n log n) / O(1)
class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        nums.sort()
        
        return max(nums[0] * nums[1] * nums[-1], nums[-1] * nums[-2] * nums[-3])
        
        
# Solution 2
# O(n) / O(1)
class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        smallest_two = [float('inf')] * 2
        biggest_three = [float('-inf')] * 3
        
        for n in nums:
            if n < smallest_two[-1]:
                smallest_two[-1] = n
                smallest_two.sort()
            
            if n > biggest_three[0]:
                biggest_three[0] = n
                biggest_three.sort()
            
        return max(smallest_two[0] * smallest_two[1] * biggest_three[-1], biggest_three[0] * biggest_three[1] * biggest_three[2])
