# https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced

# Solution 1 - Stack
# O(n) / O(n)
class Solution:
    def minSwaps(self, s: str) -> int:
        stack = []
        mismatch = 0

        for c in s:
            if c == '[':
                stack.append(c)
            else:
                if stack:
                    stack.pop()
                else:
                    mismatch += 1
        
        return (mismatch + 1) // 2
    
    
    
# Solution 2 - counting opening
# O(n) / O(1) 
class Solution:
    def minSwaps(self, s: str) -> int:
        opening = 0
        mismatch = 0

        for c in s:
            if c == '[':
                opening += 1
            else:
                if opening > 0:
                    opening -= 1
                else:
                    mismatch += 1
        
        return (mismatch + 1) // 2
