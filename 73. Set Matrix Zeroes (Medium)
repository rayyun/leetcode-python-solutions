# https://leetcode.com/problems/set-matrix-zeroes/

# Solution 1 - O(m + n) space
# TC: O(m * n) / SC: O(m + n)
class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        R, C = len(matrix), len(matrix[0])
        rows, cols = set(), set()

        for r in range(R):
            for c in range(C):
                if matrix[r][c] == 0:
                    rows.add(r)
                    cols.add(c)
        
        for r in range(R):
            for c in range(C):
                if r in rows or c in cols:
                    matrix[r][c] = 0

                    
                    
# Solution 2 - O(1) space
# TC: O(m * n) / SC: O(1)
class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        zero_in_firstrow = False
        zero_in_firstcol = False
        
        R, C = len(matrix), len(matrix[0])
        
        for r in range(R):
            for c in range(C):
                if matrix[r][c] == 0:
                    if r == 0:
                        zero_in_firstrow = True
                    if c == 0:
                        zero_in_firstcol = True
                        
                    matrix[0][c] = 0
                    matrix[r][0] = 0
                    
        for r in range(1, R):
            for c in range(1, C):
                if matrix[r][0] == 0 or matrix[0][c] == 0:
                    matrix[r][c] = 0
                    
        if zero_in_firstrow:
            for c in range(C):
                matrix[0][c] = 0
        
        if zero_in_firstcol:
            for r in range(R):
                matrix[r][0] = 0
