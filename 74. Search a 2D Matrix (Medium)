# https://leetcode.com/problems/search-a-2d-matrix/

# O(log(mn)) / O(1)
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        M = len(matrix)
        N = len(matrix[0])
        
        left, right = 0, M * N  - 1
        
        while left <= right:
            mid = left + (right - left) // 2
            r = mid // N
            c = mid % N
            
            if matrix[r][c] == target:
                return True
            elif matrix[r][c] > target:
                right = mid - 1
            else:
                left = mid + 1
                
        return False
