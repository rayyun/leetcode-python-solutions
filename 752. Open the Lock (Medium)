# https://leetcode.com/problems/open-the-lock/

from collections import deque

class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        def next_numbers(num):
            for i in range(4):
                x = int(num[i])

                for j in (1, -1):
                    y = (x + j) % 10
                    yield num[:i] + str(y) + num[i+1:]

        dead_set = set(deadends)
        queue = deque([('0000', 0)])
        seen = {'0000'}

        while queue:
            num, moves = queue.popleft()

            if num == target:
                return moves

            if num not in dead_set:
                for next_num in next_numbers(num):
                    if next_num not in seen:
                        seen.add(next_num)
                        queue.append((next_num, moves+1))
        
        return -1
