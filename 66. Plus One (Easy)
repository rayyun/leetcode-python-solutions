# https://leetcode.com/problems/plus-one/

# Solution 1
# O(n) / O(n)
class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        res = digits[::-1]
        plus = True
        carry = 0
        
        for i in range(len(res)):
            if res[i] < 9 and carry == 0 and plus:
                res[i] += 1
                break
            else:
                if plus:
                    carry, res[i] = divmod(carry + res[i] + 1, 10)
                    plus = False
                else:
                    carry, res[i] = divmod(carry + res[i], 10)
            
        if carry > 0:
            res.append(carry)            
            
        return res[::-1]
        
        
# Solution 2
# O(n) / O(n)
class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        N = len(digits)
        carry = 0
        
        for i in range(N):
            idx = N - 1 - i
            
            if digits[idx] == 9:
                digits[idx] = 0
            else:
                digits[idx] += 1
                return digits
            
        return [1] + digits
