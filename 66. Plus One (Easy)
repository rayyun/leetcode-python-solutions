# https://leetcode.com/problems/plus-one/

# Solution 1
# O(n) / O(n)
class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        N = len(digits)
        
        carry, digits[-1] = divmod(digits[-1] + 1, 10)
        
        for i in range(N-2, -1, -1):
            if carry:
                carry, digits[i] = divmod(carry + digits[i], 10)
            else:
                return digits
        
        if carry:
            return [carry] + digits
        else:
            return digits        
  
  
  
# Solution 2
# O(n) / O(n)
class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        N = len(digits)
        
        for i in range(N-1, -1, -1):
            if digits[i] == 9:
                digits[i] = 0
            else:
                digits[i] += 1
                return digits
            
        return [1] + digits
