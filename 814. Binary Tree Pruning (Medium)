# https://leetcode.com/problems/binary-tree-pruning/

# O(n) / O(n)
class Solution:
    def pruneTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        def has_one(node):
            if not node:
                return
            
            left_has_one = has_one(node.left)
            right_has_one = has_one(node.right)
            
            if not left_has_one:
                node.left = None
            
            if not right_has_one:
                node.right = None
                
            return node.val or left_has_one or right_has_one
        
        return root if has_one(root) else None 
